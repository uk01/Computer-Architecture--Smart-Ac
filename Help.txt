Our ISA has 14 GENERAL purpose integer registers.
R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13 
The different opcodes are as follows.
ADD   
>> ADD R1 R2 R3 :: R3 = R1 + R2
SUB
>> SUB R1 R2 R3 :: R3 = R1 - R2
MULT
>> MULT R1 R2 R3 :: R3 = R1 * R2
DIV
>> DIV R1 R2 R3 :: R3 = R1 / R2
CMP
>>CMP R1 R2 :: if R1 = R2 return 0
	        :: if R1!= R2 return 1
NOT
>>NOT R1 R2 :: R2 = !R1
LSHIFT 
>>LSHIFT R1 R2 :: Shift Left R1 by R2 bits
RSHIFT
>>RSHIFT R1 R2 :: Shift Right R1 by R2 bits
STORE
>>STORE R1 #1 :: STORE VALUE 1 IN MEMORY ADDRESS OF R1
LOAD
>> LOAD R1 #1234 :: LOAD VALUE STORED AT MEMORY ADDRESS 1234 TO R1
MOVE 
>> MOVE R1 #1 :: MOVE #1 TO R1
IN
>> IN PORT , R1 :: INPUT TO R1 AT THIS PORT 
OUT
>> OUT PORT ,R1 :: OUTPUT R1 AT THIS PORT 
DEC
>> DEC R1 :: R1=R1-- 
INC
>> INC R1 :: R1=R1++
PUSH
>> PUSH R1 :: PUSH R1 TO THE STACK 
POP
>> POP R1 :: POP R1 FROM THE STACK
SP
>>POINTS TO THE TOP OF STACK
JME 
>>JME L1 :: JUMP TO L1 IF EQUAL TO 
JNZ
>>JNZ L1 :: JUMP TO L1 IF NOT ZERO 
JNE
>>JNE L1 :: JUMP IF NOT EQUAL TO L1
JMP
>>JMP L1 :: JUMP TO L1
CLEAR
>> CLEAR
START
>> START THE PROGRAM
HLT
>> ENDS THE PROGRAM
